{
  "/home/cassio/serveless-agendamentos/serverless.yml": {
    "versionFramework": "4.18.1",
    "servicePath": "/home/cassio/serveless-agendamentos/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "cassriorp28",
      "app": "serveless-agendamentos",
      "service": "serveless-agendamentos",
      "plugins": [
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev",
        "region": "us-east-1",
        "memorySize": 128,
        "timeout": 3,
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "GetAgendasLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/serveless-agendamentos-dev-getAgendas"
              }
            },
            "HelloLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/serveless-agendamentos-dev-hello"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "serveless-agendamentos",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-agendamentos-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-agendamentos-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "serveless-agendamentos",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "GetAgendasLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
                  "S3Key": "serverless/serveless-agendamentos/dev/1756047885077-2025-08-24T15:04:45.077Z/serveless-agendamentos.zip"
                },
                "Handler": "src/handlers/GetAgendas.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "serveless-agendamentos-dev-getAgendas",
                "MemorySize": 128,
                "Timeout": 3,
                "Description": "Busca as agendas de medicos",
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetAgendasLogGroup"
              ]
            },
            "HelloLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
                  "S3Key": "serverless/serveless-agendamentos/dev/1756047885077-2025-08-24T15:04:45.077Z/serveless-agendamentos.zip"
                },
                "Handler": "src/handlers/PostAgendamento.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "serveless-agendamentos-dev-hello",
                "MemorySize": 128,
                "Timeout": 3,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HelloLogGroup"
              ]
            },
            "GetAgendasLambdaVersionDI1ASUkj6b6NHesF2tQMNN2Wb6DiWuJkNR8gycGBOE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetAgendasLambdaFunction"
                },
                "CodeSha256": "QyNcSuNFra0+V69LPSSM3FL0sXaEXBduubDrYLG7mbg=",
                "Description": "Busca as agendas de medicos"
              }
            },
            "HelloLambdaVersioniNXRh3XrFV33BrdR42oxdIh3GN9cCjlu6jpGq15VfQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HelloLambdaFunction"
                },
                "CodeSha256": "QyNcSuNFra0+V69LPSSM3FL0sXaEXBduubDrYLG7mbg="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-serveless-agendamentos",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "GetAgendasLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetAgendasLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetAgendas": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetAgendasLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetAgendas": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /agendas",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetAgendas"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetAgendas"
            },
            "HelloLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HelloLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationHello": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "HelloLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostAgendamento": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /agendamento",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationHello"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationHello"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
              "Export": {
                "Name": "sls-serveless-agendamentos-dev-ServerlessDeploymentBucketName"
              }
            },
            "GetAgendasLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetAgendasLambdaVersionDI1ASUkj6b6NHesF2tQMNN2Wb6DiWuJkNR8gycGBOE"
              },
              "Export": {
                "Name": "sls-serveless-agendamentos-dev-GetAgendasLambdaFunctionQualifiedArn"
              }
            },
            "HelloLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HelloLambdaVersioniNXRh3XrFV33BrdR42oxdIh3GN9cCjlu6jpGq15VfQ"
              },
              "Export": {
                "Name": "sls-serveless-agendamentos-dev-HelloLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-serveless-agendamentos-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-serveless-agendamentos-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "getAgendas": {
          "handler": "src/handlers/GetAgendas.handler",
          "description": "Busca as agendas de medicos",
          "events": [
            {
              "httpApi": {
                "path": "/agendas",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/agendas"
            }
          ],
          "name": "serveless-agendamentos-dev-getAgendas",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 128,
          "timeout": 3,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetAgendasLambdaVersionDI1ASUkj6b6NHesF2tQMNN2Wb6DiWuJkNR8gycGBOE"
        },
        "hello": {
          "handler": "src/handlers/PostAgendamento.handler",
          "events": [
            {
              "httpApi": {
                "path": "/agendamento",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/agendamento"
            }
          ],
          "name": "serveless-agendamentos-dev-hello",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 128,
          "timeout": 3,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "HelloLambdaVersioniNXRh3XrFV33BrdR42oxdIh3GN9cCjlu6jpGq15VfQ"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "stage": "dev",
      "region": "us-east-1",
      "memorySize": 128,
      "timeout": 3,
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetAgendasLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serveless-agendamentos-dev-getAgendas"
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serveless-agendamentos-dev-hello"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serveless-agendamentos",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-agendamentos-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-agendamentos-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serveless-agendamentos",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetAgendasLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
                "S3Key": "serverless/serveless-agendamentos/dev/1756047885077-2025-08-24T15:04:45.077Z/serveless-agendamentos.zip"
              },
              "Handler": "src/handlers/GetAgendas.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "serveless-agendamentos-dev-getAgendas",
              "MemorySize": 128,
              "Timeout": 3,
              "Description": "Busca as agendas de medicos",
              "Environment": {
                "Variables": {
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAgendasLogGroup"
            ]
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
                "S3Key": "serverless/serveless-agendamentos/dev/1756047885077-2025-08-24T15:04:45.077Z/serveless-agendamentos.zip"
              },
              "Handler": "src/handlers/PostAgendamento.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "serveless-agendamentos-dev-hello",
              "MemorySize": 128,
              "Timeout": 3,
              "Environment": {
                "Variables": {
                  "NODE_OPTIONS": "--enable-source-maps"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloLogGroup"
            ]
          },
          "GetAgendasLambdaVersionDI1ASUkj6b6NHesF2tQMNN2Wb6DiWuJkNR8gycGBOE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAgendasLambdaFunction"
              },
              "CodeSha256": "QyNcSuNFra0+V69LPSSM3FL0sXaEXBduubDrYLG7mbg=",
              "Description": "Busca as agendas de medicos"
            }
          },
          "HelloLambdaVersioniNXRh3XrFV33BrdR42oxdIh3GN9cCjlu6jpGq15VfQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "QyNcSuNFra0+V69LPSSM3FL0sXaEXBduubDrYLG7mbg="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-serveless-agendamentos",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetAgendasLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAgendasLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAgendas": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "GetAgendasLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetAgendas": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /agendas",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAgendas"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAgendas"
          },
          "HelloLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationHello": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostAgendamento": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /agendamento",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationHello"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationHello"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
            "Export": {
              "Name": "sls-serveless-agendamentos-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetAgendasLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAgendasLambdaVersionDI1ASUkj6b6NHesF2tQMNN2Wb6DiWuJkNR8gycGBOE"
            },
            "Export": {
              "Name": "sls-serveless-agendamentos-dev-GetAgendasLambdaFunctionQualifiedArn"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersioniNXRh3XrFV33BrdR42oxdIh3GN9cCjlu6jpGq15VfQ"
            },
            "Export": {
              "Name": "sls-serveless-agendamentos-dev-HelloLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-serveless-agendamentos-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-serveless-agendamentos-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "l87bglC2HqjMXhTm0g",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "\norg: cassriorp28\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: serveless-agendamentos\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: serveless-agendamentos\n\nplugins:\n  - serverless-offline\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  stage: dev\n  region: us-east-1\n  memorySize: 128\n  timeout: 3\n\nfunctions:\n  getAgendas:\n    handler: src/handlers/GetAgendas.handler\n    description: \"Busca as agendas de medicos\"\n    events:\n      - httpApi:\n          path: /agendas\n          method: get\n  hello:\n    handler: src/handlers/PostAgendamento.handler\n    events:\n      - httpApi:\n          path: /agendamento\n          method: post\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "650fe061-517d-4ba9-9f8c-35455faad601",
    "orgName": "cassriorp28",
    "userId": "T5phxB90BCVDtcHQqL",
    "userName": "cassriorp28",
    "serviceProviderAwsAccountId": "918036561891",
    "serviceProviderAwsCfStackName": "serveless-agendamentos-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:918036561891:stack/serveless-agendamentos-dev/b0e16630-80f5-11f0-977e-124d3fdcb0b3",
    "serviceProviderAwsCfStackCreated": "2025-08-24T14:21:57.258Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetAgendasLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:918036561891:function:serveless-agendamentos-dev-getAgendas:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-serveless-agendamentos-dev-GetAgendasLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HelloLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:918036561891:function:serveless-agendamentos-dev-hello:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-serveless-agendamentos-dev-HelloLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "u382onlvxi",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-serveless-agendamentos-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
        "ExportName": "sls-serveless-agendamentos-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://u382onlvxi.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-serveless-agendamentos-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "GetAgendasLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/serveless-agendamentos-dev-getAgendas"
          }
        },
        "HelloLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/serveless-agendamentos-dev-hello"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "serveless-agendamentos",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-agendamentos-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-agendamentos-dev*:*:*"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "serveless-agendamentos",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "GetAgendasLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
              "S3Key": "serverless/serveless-agendamentos/dev/1756047885077-2025-08-24T15:04:45.077Z/serveless-agendamentos.zip"
            },
            "Handler": "src/handlers/GetAgendas.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "serveless-agendamentos-dev-getAgendas",
            "MemorySize": 128,
            "Timeout": 3,
            "Description": "Busca as agendas de medicos",
            "Environment": {
              "Variables": {
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetAgendasLogGroup"
          ]
        },
        "HelloLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
              "S3Key": "serverless/serveless-agendamentos/dev/1756047885077-2025-08-24T15:04:45.077Z/serveless-agendamentos.zip"
            },
            "Handler": "src/handlers/PostAgendamento.handler",
            "Runtime": "nodejs20.x",
            "FunctionName": "serveless-agendamentos-dev-hello",
            "MemorySize": 128,
            "Timeout": 3,
            "Environment": {
              "Variables": {
                "NODE_OPTIONS": "--enable-source-maps"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "HelloLogGroup"
          ]
        },
        "GetAgendasLambdaVersionDI1ASUkj6b6NHesF2tQMNN2Wb6DiWuJkNR8gycGBOE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetAgendasLambdaFunction"
            },
            "CodeSha256": "QyNcSuNFra0+V69LPSSM3FL0sXaEXBduubDrYLG7mbg=",
            "Description": "Busca as agendas de medicos"
          }
        },
        "HelloLambdaVersioniNXRh3XrFV33BrdR42oxdIh3GN9cCjlu6jpGq15VfQ": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "HelloLambdaFunction"
            },
            "CodeSha256": "QyNcSuNFra0+V69LPSSM3FL0sXaEXBduubDrYLG7mbg="
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-serveless-agendamentos",
            "ProtocolType": "HTTP"
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "GetAgendasLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetAgendasLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationGetAgendas": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "GetAgendasLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetAgendas": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /agendas",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationGetAgendas"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationGetAgendas"
        },
        "HelloLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "HelloLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationHello": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "HelloLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostAgendamento": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /agendamento",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationHello"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationHello"
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-3dcbc453-15d4",
          "Export": {
            "Name": "sls-serveless-agendamentos-dev-ServerlessDeploymentBucketName"
          }
        },
        "GetAgendasLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetAgendasLambdaVersionDI1ASUkj6b6NHesF2tQMNN2Wb6DiWuJkNR8gycGBOE"
          },
          "Export": {
            "Name": "sls-serveless-agendamentos-dev-GetAgendasLambdaFunctionQualifiedArn"
          }
        },
        "HelloLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "HelloLambdaVersioniNXRh3XrFV33BrdR42oxdIh3GN9cCjlu6jpGq15VfQ"
          },
          "Export": {
            "Name": "sls-serveless-agendamentos-dev-HelloLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-serveless-agendamentos-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-serveless-agendamentos-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}